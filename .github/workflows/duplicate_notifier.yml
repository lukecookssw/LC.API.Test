on:
  issues:
    types: [closed]

jobs:
  find-duplicate-target:
    runs-on: ubuntu-latest

    steps:
      - name: Find issue that this was closed as a duplicate of
        uses: actions/github-script@v7
        with:
          script: |
            // Extract owner/repo/issue_number manually from payload
            const payload = context.payload;
            const owner = payload.repository.owner.login;
            const repo = payload.repository.name;
            const issue_number = payload.issue.number;

            core.info(`Checking issue #${issue_number} in ${owner}/${repo}...`);

            // Only proceed if closed as duplicate
            if (payload.issue.state_reason !== 'duplicate') {
              core.info(`Issue #${issue_number} was closed, but not as a duplicate.`);
              return;
            }

            core.info(`Fetching timeline for issue #${issue_number}...`);

            // The /timeline API is preview-only, so we have to include a special Accept header
            const timeline = await github.request('GET /repos/{owner}/{repo}/issues/{issue_number}/timeline', {
              owner,
              repo,
              issue_number,
              headers: {
                accept: 'application/vnd.github.mockingbird-preview+json'
              }
            });

            core.info(`Fetched timeline for issue #${issue_number}: ${JSON.stringify(timeline.data)}`);

            // Look for a "connected" or "referenced" event pointing to another issue
            const duplicateEvent = timeline.data.find(event =>
              (event.event === 'connected' || event.event === 'referenced') &&
              event.source?.issue?.number
            );

            if (!duplicateEvent) {
              core.warning(`No duplicate link found in the timeline for issue #${issue_number}`);
              return;
            }

            const targetIssue = duplicateEvent.source.issue;
            core.info(`âœ… Found linked issue: #${targetIssue.number} (${targetIssue.html_url})`);
            core.setOutput('duplicate_of', targetIssue.number);
