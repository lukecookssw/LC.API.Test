name: Duplicate Issue Notifier

on:
  issues:
    types: [closed]

jobs:
  handle-duplicate:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'duplicate')
    
    steps:
      - name: Extract duplicate issue number
        id: extract-duplicate
        run: |
          # Look for duplicate issue reference in the issue body or comments
          ISSUE_BODY="${{ github.event.issue.body }}"
          
          # Try to find patterns like "duplicate of #123", "Duplicate: #123", etc.
          DUPLICATE_NUMBER=$(echo "$ISSUE_BODY" | grep -oiE '(duplicate\s+of\s+#?|duplicate:\s*#?)([0-9]+)' | grep -oE '[0-9]+' | head -1)
          
          if [ -z "$DUPLICATE_NUMBER" ]; then
            # If not found in body, check the closing comment
            CLOSING_COMMENT=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/events" | \
              jq -r '.[] | select(.event == "closed") | .actor.login + ": " + (.commit_id // "no commit")')
            
            # Try to get the last comment that might contain duplicate reference
            LAST_COMMENT=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments" | \
              jq -r '.[-1].body // ""')
            
            DUPLICATE_NUMBER=$(echo "$LAST_COMMENT" | grep -oiE '(duplicate\s+of\s+#?|duplicate:\s*#?)([0-9]+)' | grep -oE '[0-9]+' | head -1)
          fi
          
          if [ -n "$DUPLICATE_NUMBER" ]; then
            echo "duplicate_issue=$DUPLICATE_NUMBER" >> $GITHUB_OUTPUT
            echo "found_duplicate=true" >> $GITHUB_OUTPUT
          else
            echo "found_duplicate=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on closed issue
        if: steps.extract-duplicate.outputs.found_duplicate == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const duplicateIssue = '${{ steps.extract-duplicate.outputs.duplicate_issue }}';
            const author = '${{ github.event.issue.user.login }}';
            
            const comment = `Hi @${author}, we have closed this as a duplicate of #${duplicateIssue}. We've also @ mentioned you on that issue so you continue to receive updates on activity :)`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number }},
              body: comment
            });

      - name: Comment on original issue
        if: steps.extract-duplicate.outputs.found_duplicate == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const duplicateIssue = '${{ steps.extract-duplicate.outputs.duplicate_issue }}';
            const author = '${{ github.event.issue.user.login }}';
            
            const comment = `Adding @${author} for visibility`;
            
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: parseInt(duplicateIssue),
                body: comment
              });
            } catch (error) {
              console.log(`Could not comment on issue #${duplicateIssue}: ${error.message}`);
              // Don't fail the workflow if the original issue doesn't exist or is inaccessible
            }

      - name: Log workflow completion
        if: steps.extract-duplicate.outputs.found_duplicate == 'true'
        run: |
          echo "Successfully processed duplicate issue #${{ github.event.issue.number }}"
          echo "Original issue: #${{ steps.extract-duplicate.outputs.duplicate_issue }}"
          echo "Author notified: ${{ github.event.issue.user.login }}"