on:
  issues:
    types: [closed]

jobs:
  find-duplicate-target:
    runs-on: ubuntu-latest

    steps:
      - name: Find issue that this was closed as a duplicate of
        uses: actions/github-script@v7
        with:
          script: |
            // Extract owner/repo/issue_number manually from payload
            const payload = context.payload;
            const owner = payload.repository.owner.login;
            const repo = payload.repository.name;
            const issue_number = payload.issue.number;

            core.info(`Checking issue #${issue_number} in ${owner}/${repo}...`);

            // Only proceed if closed as duplicate
            if (payload.issue.state_reason !== 'duplicate') {
              core.info(`Issue #${issue_number} was closed, but not as a duplicate.`);
              return;
            }

            // Fetch the timeline to look for cross-references
            // Note: listTimeline is used instead of listEvents because it includes richer data
            const timeline = await github.rest.issues.listEvents({
              owner,
              repo,
              issue_number
            });

            // Find a cross-reference event that points to another issue
            const crossRef = [...timeline.data]
              .reverse()
              .find(e => e.event === 'cross-referenced' && e.source?.issue?.number);

            if (!crossRef) {
              core.warning(`No cross-reference event found for issue #${issue_number}.`);
              return;
            }

            const targetIssueNumber = crossRef.source.issue.number;
            const targetUrl = crossRef.source.issue.html_url;

            core.info(`âœ… Issue #${issue_number} was closed as a duplicate of #${targetIssueNumber} (${targetUrl})`);

            // Output the target issue number for later steps
            core.setOutput('duplicate_of', targetIssueNumber);
