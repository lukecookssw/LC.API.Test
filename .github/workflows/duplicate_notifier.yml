name: Duplicate Issue Notifier

on:
  issues:
    types: [closed]

jobs:
  find-duplicate-target:
    runs-on: ubuntu-latest
    steps:
      - name: Find issue that this was closed as a duplicate of
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, issue } = context.payload;
            const issue_number = issue.number;
            core.info(JSON.stringify(context.payload));

            // 1 Fetch all events for the issue
            const events = await github.rest.issues.listEvents({
              owner,
              repo,
              issue_number,
            });

            // 2 Check if it was closed as duplicate
            const closedEvent = events.data.find(
              e => e.event === 'closed' && e.state_reason === 'duplicated'
            );

            if (!closedEvent) {
              core.info(`Issue #${issue_number} was not closed as a duplicate.`);
              return;
            }

            // 3 Find the last cross-reference event before the close
            const crossRef = [...events.data]
              .reverse() // go from most recent to oldest
              .find(
                e =>
                  e.event === 'cross-referenced' &&
                  e.source?.issue?.number &&
                  new Date(e.created_at) <= new Date(closedEvent.created_at)
              );

            if (!crossRef) {
              core.warning(`No cross-reference found for duplicate close.`);
              return;
            }

            const targetIssueNumber = crossRef.source.issue.number;
            const targetUrl = crossRef.source.issue.html_url;

            core.info(`Issue #${issue_number} was closed as a duplicate of #${targetIssueNumber} (${targetUrl})`);

            // Example: export as an output for later workflow steps
            core.setOutput('duplicate_of', targetIssueNumber);
